// #Sireum

package base.test_event_port_periodic_domains

import org.sireum._
import art.Art
import base._

// Do not edit this file as it will be overwritten if HAMR codegen is rerun
@msig trait consumer_t_i_consumer_consumer_TestApi {

  def BeforeEntrypoint(): Unit = {
    Art.initTest(Arch.top_impl_Instance_consumer_consumer)
  }

  def AfterEntrypoint(): Unit = {
    Art.finalizeTest(Arch.top_impl_Instance_consumer_consumer)
  }

  def testCompute(): Unit = {
    Art.manuallyClearOutput()
    Art.testCompute(Arch.top_impl_Instance_consumer_consumer)
  }

  def testInitialise(): Unit = {
    Art.manuallyClearOutput()
    Art.testInitialise(Arch.top_impl_Instance_consumer_consumer)
  }

  /** helper function to set the values of all input ports.
   * @param consume the number of events to place in the consume event port queue.
   *   ART currently supports single element event queues so at most
   *   one event will be placed in the queue.
   */
  def put_concrete_inputs(consume : Z): Unit = {
    for(i <- 0 until consume) {
      put_consume()
    }
  }


  // setter for in EventPort
  def put_consume(): Unit = {
    Art.insertInInfrastructurePort(Arch.top_impl_Instance_consumer_consumer.operational_api.consume_Id, art.Empty())
  }

}
