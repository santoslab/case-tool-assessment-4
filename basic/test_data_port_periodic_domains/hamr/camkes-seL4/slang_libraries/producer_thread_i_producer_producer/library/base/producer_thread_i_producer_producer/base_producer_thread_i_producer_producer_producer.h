#ifndef SIREUM_H_base_producer_thread_i_producer_producer_producer
#define SIREUM_H_base_producer_thread_i_producer_producer_producer

#ifdef __cplusplus
extern "C" {
#endif

#include <types.h>

void base_producer_thread_i_producer_producer_producer_init(STACK_FRAME_ONLY);

base_test_data_port_periodic_domains_producer_thread_i_producer_producer_Bridge base_producer_thread_i_producer_producer_producer_producerBridge(STACK_FRAME_ONLY);
art_Bridge_EntryPoints base_producer_thread_i_producer_producer_producer_entryPoints(STACK_FRAME_ONLY);
Option_8E9F45 base_producer_thread_i_producer_producer_producer_noData(STACK_FRAME_ONLY);
art_Art_PortId base_producer_thread_i_producer_producer_producer_write_port_id(STACK_FRAME_ONLY);
Option_8E9F45 base_producer_thread_i_producer_producer_producer_write_port_port(STACK_FRAME_ONLY);
void base_producer_thread_i_producer_producer_producer_write_port_port_a(STACK_FRAME Option_8E9F45 p_write_port_port);

Z base_producer_thread_i_producer_producer_producer_main(STACK_FRAME IS_948B60 args);

Unit base_producer_thread_i_producer_producer_producer_initialiseArchitecture(STACK_FRAME_ONLY);

Unit base_producer_thread_i_producer_producer_producer_initialiseEntryPoint(STACK_FRAME_ONLY);

Unit base_producer_thread_i_producer_producer_producer_computeEntryPoint(STACK_FRAME_ONLY);

Unit base_producer_thread_i_producer_producer_producer_finaliseEntryPoint(STACK_FRAME_ONLY);

Unit base_producer_thread_i_producer_producer_producer_touch_printDataContent(STACK_FRAME art_DataContent a);

Unit base_producer_thread_i_producer_producer_producer_touch(STACK_FRAME_ONLY);

Unit base_producer_thread_i_producer_producer_producer_logInfo(STACK_FRAME String title, String msg);

Unit base_producer_thread_i_producer_producer_producer_logDebug(STACK_FRAME String title, String msg);

Unit base_producer_thread_i_producer_producer_producer_logError(STACK_FRAME String title, String msg);

Unit base_producer_thread_i_producer_producer_producer_putValue(STACK_FRAME art_Art_PortId portId, art_DataContent data);

Unit base_producer_thread_i_producer_producer_producer_sendOutput(STACK_FRAME IS_D10119 eventPortIds, IS_D10119 dataPortIds);

Unit base_producer_thread_i_producer_producer_producer_receiveInput(STACK_FRAME IS_D10119 eventPortIds, IS_D10119 dataPortIds);

void base_producer_thread_i_producer_producer_producer_init_producerBridge(STACK_FRAME_ONLY);

void base_producer_thread_i_producer_producer_producer_init_entryPoints(STACK_FRAME_ONLY);

void base_producer_thread_i_producer_producer_producer_init_noData(STACK_FRAME_ONLY);

void base_producer_thread_i_producer_producer_producer_init_write_port_id(STACK_FRAME_ONLY);

void base_producer_thread_i_producer_producer_producer_init_write_port_port(STACK_FRAME_ONLY);

#ifdef __cplusplus
}
#endif

#endif